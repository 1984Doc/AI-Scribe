name: Build Workflow

on:
  push:
    tags:
      - "v*.*.*"
      - "v*.*.*.alpha"

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.10"
          architecture: "x64"

      - name: Install requirements
        run: |
          pip install -r client_requirements.txt

      # Create CUDA-enabled executable
      - name: Install CUDA-enabled llama_cpp
        run: |
          pip install --index-url https://abetlen.github.io/llama-cpp-python/whl/cu121 --extra-index-url https://pypi.org/simple llama-cpp-python==v0.2.90
      - name: Run PyInstaller for NVIDIA
        run: |
          pyinstaller --additional-hooks-dir=.\scripts\hooks --add-data ".\src\FreeScribe.client\whisper-assets:whisper\assets" --add-data ".\src\FreeScribe.client\markdown:markdown" --add-data ".\src\FreeScribe.client\assets:assets" --name freescribe-client-nvidia --icon=.\src\FreeScribe.client\assets\logo.ico --noconsole .\src\FreeScribe.client\client.py
      - name: Zip CUDA-enabled executable
        run: |
          Compress-Archive -Path dist\freescribe-client-nvidia -DestinationPath dist\freescribe-client-nvidia.zip
        shell: pwsh

      # Create CPU-only executable
      - name: Uninstall CUDA-enabled llama_cpp (if necessary) and install CPU-only llama_cpp
        run: |
          pip uninstall -y llama-cpp-python
          pip install --index-url https://abetlen.github.io/llama-cpp-python/whl/cpu --extra-index-url https://pypi.org/simple llama-cpp-python==v0.2.90
      - name: Run PyInstaller for CPU-only
        run: |
          pyinstaller --additional-hooks-dir=.\scripts\hooks --add-data ".\src\FreeScribe.client\whisper-assets:whisper\assets" --add-data ".\src\FreeScribe.client\markdown:markdown" --add-data ".\src\FreeScribe.client\assets:assets" --name freescribe-client-cpu --icon=.\src\FreeScribe.client\assets\logo.ico --noconsole .\src\FreeScribe.client\client.py
      - name: Zip CPU-only executable
        run: |
          Compress-Archive -Path dist\freescribe-client-cpu -DestinationPath dist\freescribe-client-cpu.zip
        shell: pwsh

      - name: Set up NSIS
        uses: joncloud/makensis-action@1c9f4bf2ea0c771147db31a2f3a7f5d8705c0105
        with:
          script-file: .\scripts\install.nsi
          additional-plugin-paths: "./scripts/nsis-plugins"

      - name: Check if alpha release
        id: check_alpha
        run: |
          if ("${{ github.ref }}" -like "*.alpha") {
            echo "is_alpha=true" >> $env:GITHUB_OUTPUT
          } else {
            echo "is_alpha=false" >> $env:GITHUB_OUTPUT
          }
        shell: pwsh

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## What's Changed
            ${{ steps.changelog.outputs.CHANGELOG }}

            For full changelog, see [the commits since last release](${{ github.server_url }}/${{ github.repository }}/compare/${{ steps.changelog.last_tag }}...${{ github.ref }})
          draft: false
          prerelease: ${{ steps.check_alpha.outputs.is_alpha == 'true' }}

      - name: Upload Installer
        id: upload-installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: dist/FreeScribeInstaller.exe
          asset_name: FreeScribeInstaller_windows.exe
          asset_content_type: application/octet-stream

      - name: Upload CUDA-enabled ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/freescribe-client-nvidia.zip
          asset_name: freescribe-client-nvidia.zip
          asset_content_type: application/zip

      - name: Upload CPU-only ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/freescribe-client-cpu.zip
          asset_name: freescribe-client-cpu.zip
          asset_content_type: application/zip
